- name: Default Request ID
  description: Generates a unique request ID for every request
  op: merge_in
  path: '*/filter_chains/*/filters/name=envoy.filters.network.http_connection_manager/typed_config'
  value:
    generate_request_id: true
- name: Default HTTP2 Protocol Options
  description: Sets default HTTP2 Protocol Options
  op: merge_in
  path: '*/filter_chains/*/filters/name=envoy.filters.network.http_connection_manager/typed_config'
  value:
    http2_protocol_options:
      initial_connection_window_size: 1048576.0
      initial_stream_window_size: 65536.0
      max_concurrent_streams: 100
- name: Default Access Logging Configuration
  description: Sets default access logging configuration
  op: merge_in
  path: '*/filter_chains/*/filters/name=envoy.filters.network.http_connection_manager/typed_config'
  value:
    access_log:
      - name: envoy.access_loggers.stdout
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          log_format:
            json_format:
              '@timestamp': '%START_TIME%'
              client.address: '%DOWNSTREAM_REMOTE_ADDRESS%'
              client.local.address: '%DOWNSTREAM_LOCAL_ADDRESS%'
              client.peer.subject: '%DOWNSTREAM_PEER_SUBJECT%'
              envoy.route.name: '%ROUTE_NAME%'
              envoy.upstream.cluster: '%UPSTREAM_CLUSTER%'
              host.hostname: '%HOSTNAME%'
              http.request.body.bytes: '%BYTES_RECEIVED%'
              http.request.duration: '%DURATION%'
              http.request.headers.accept: '%REQ(ACCEPT)%'
              http.request.headers.authority: '%REQ(:AUTHORITY)%'
              http.request.headers.id: '%REQ(X-REQUEST-ID)%'
              http.request.headers.x_forwarded_for: '%REQ(X-FORWARDED-FOR)%'
              http.request.headers.x_forwarded_proto: '%REQ(X-FORWARDED-PROTO)%'
              http.request.method: '%REQ(:METHOD)%'
              http.response.body.bytes: '%BYTES_SENT%'
              downstream.auth: '%DYNAMIC_METADATA(proxyconf.downstream_auth)%'
              tls_inspector: '%DYNAMIC_METADATA(envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector)%'
